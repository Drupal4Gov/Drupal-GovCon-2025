@use '@atoms/colors/color.scss' as color;
@use "sass:map";

@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap');

body {
  font-family: "Poppins", sans-serif;
}

// Headings
h1,
.h1 {
  font-size: 40px;
  font-weight: 600;
  line-height: 115%;
}

h2,
.h2 {
  font-size: 32px;
  font-weight: 600;
  line-height: 115%;
}

h3,
.h3 {
  font-size: 22px;
  font-weight: 600;
  line-height: 115%;
}

h4,
.h4 {
  font-size: 16px;
  font-weight: 600;
  line-height: 115%;
}

h5,
.h5 {
  font-size: 15px;
  font-weight: 500;
  line-height: 115%;
}

h6,
.h6 {
  font-size: 13px;
  font-weight: 500;
  line-height: 115%;
}

p,
.body-text {
  font-family: "Roboto Mono", "Poppins", sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 162%;
}

// Lead text
.lead {
  font-size: 1.25rem;
  font-weight: 400;
  color: map.get(color.$colors, "dark");
}

// Inline text elements
mark {
  background-color: map.get(color.$colors, "secondary");
  padding: 0.2em;
  color: map.get(color.$colors, "light");
}

del,
s {
  text-decoration: line-through;
  color: map.get(color.$colors, "disabled");
}

ins {
  text-decoration: underline;
  color: map.get(color.$colors, "link-dark");
}

u {
  text-decoration: underline;
}

small {
  font-size: 0.875rem;
  color: map.get(color.$colors, "dark");
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

// Blockquotes
blockquote {
  border-left: 4px solid map.get(color.$colors, "primary-dark");
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
  color: map.get(color.$colors, "primary-dark");
}

.blockquote-footer {
  font-size: 0.875rem;
  color: map.get(color.$colors, "dark");
  margin-top: 0.5rem;
}

// Alignment
.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

$links: (
  "link-light": map.get(color.$colors, "link-light"),
  "link-hover": map.get(color.$colors, "link-hover"),
  "link-visited": map.get(color.$colors, "link-visited"),
  "link-dark": map.get(color.$colors, "link-dark"),
);

@each $link-name, $link-color in $links {
  .#{$link-name} {
    color: $link-color;
    text-decoration: none;
    transition: color 0.3s ease-in-out;

    &:hover {
      text-decoration: underline;
    }
  }
}